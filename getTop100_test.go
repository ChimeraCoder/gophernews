package gophernews

import (
	"fmt"
	"net/http"
	"reflect"
	"testing"
)

func TestGetTop100(t *testing.T) {
	setup()
	defer teardown()

	jsonTop100 := `[8434128,8432709,8434649,8432703,8431936,8435278,8434338,8434997,8434785,8434409,8433734,8432423,8431653,8433690,8434268,8433824,8434430,8432373,8428632,8434391,8433505,8432211,8434512,8434966,8432919,8433691,8432838,8432857,8432528,8430412,8435195,8422599,8434996,8433163,8428522,8433046,8431635,8430544,8430096,8433247,8434309,8432305,8434735,8431753,8427852,8427757,8433869,8433816,8435047,8432072,8434403,8422087,8435402,8428056,8432157,8432555,8426148,8434023,8431361,8428849,8434823,8431640,8424696,8431961,8429123,8435307,8430611,8435449,8433681,8432616,8432388,8434830,8422581,8432145,8435168,8434618,8434173,8433703,8434097,8435202,8433879,8435299,8431697,8425501,8434589,8432021,8434350,8434641,8435089,8435158,8434900,8433552,8434905,8434868,8426984,8427086,8422928,8432130,8434950,8431577]`

	// Set up API stub
	mux.HandleFunc("/v0/topstories.json", func(w http.ResponseWriter, r *http.Request) {
		fmt.Fprint(w, jsonTop100)
	})

	// Initialize a user with expected values
	expected := []int{8434128, 8432709, 8434649, 8432703, 8431936, 8435278, 8434338, 8434997, 8434785, 8434409, 8433734, 8432423, 8431653, 8433690, 8434268, 8433824, 8434430, 8432373, 8428632, 8434391, 8433505, 8432211, 8434512, 8434966, 8432919, 8433691, 8432838, 8432857, 8432528, 8430412, 8435195, 8422599, 8434996, 8433163, 8428522, 8433046, 8431635, 8430544, 8430096, 8433247, 8434309, 8432305, 8434735, 8431753, 8427852, 8427757, 8433869, 8433816, 8435047, 8432072, 8434403, 8422087, 8435402, 8428056, 8432157, 8432555, 8426148, 8434023, 8431361, 8428849, 8434823, 8431640, 8424696, 8431961, 8429123, 8435307, 8430611, 8435449, 8433681, 8432616, 8432388, 8434830, 8422581, 8432145, 8435168, 8434618, 8434173, 8433703, 8434097, 8435202, 8433879, 8435299, 8431697, 8425501, 8434589, 8432021, 8434350, 8434641, 8435089, 8435158, 8434900, 8433552, 8434905, 8434868, 8426984, 8427086, 8422928, 8432130, 8434950, 8431577}

	// Test GetTop100
	top, err := client.GetTop100()

	// Makes sure an error wasn't passed
	if err != nil {
		t.Errorf("Error when calling GetTop100:\n", err)
	}

	// Checks to make sure request equals expected value
	if !reflect.DeepEqual(top, expected) {
		t.Errorf("client.GetTop100() returned %+v, was expecting %+v", top, expected)
	}
}
